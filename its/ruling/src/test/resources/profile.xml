<?xml version="1.0" encoding="UTF-8"?><!-- Generated by SonarQube -->
<profile>
  <name>rules</name>
  <language>grvy</language>
  <rules>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.AssignmentInConditionalRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.CatchErrorRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.CatchExceptionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.CatchNullPointerExceptionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.CatchRuntimeExceptionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.CloneableWithoutCloneRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.braces.ElseBlockBracesRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.grails.GrailsPublicControllerMethodRule.fixed</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.grails.GrailsServletContextReferenceRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.grails.GrailsSessionReferenceRule</key>
      <priority>INFO</priority>
    </rule>
    <!--<rule>-->
      <!--<repositoryKey>grvy</repositoryKey>-->
      <!--<key>org.codenarc.rule.grails.GrailsStatelessServiceRule</key>-->
      <!--<priority>INFO</priority>-->
    <!--</rule>-->
    <!--<rule>-->
      <!--<repositoryKey>grvy</repositoryKey>-->
      <!--<key>org.codenarc.rule.size.CrapMetricRule.fixed</key>-->
      <!--<priority>INFO</priority>-->
    <!--</rule>-->
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.NestedSynchronizationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.logging.PrintStackTraceRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.logging.PrintlnRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.ReturnFromFinallyBlockRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.SynchronizedMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.logging.SystemErrPrintRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.logging.SystemOutPrintRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.SystemRunFinalizersOnExitRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.ThreadYieldRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.ThrowErrorRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.ThrowExceptionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.ThrowNullPointerExceptionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.ThrowRuntimeExceptionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.ThrowThrowableRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.imports.UnnecessaryGroovyImportRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.imports.UnusedImportRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unused.UnusedPrivateFieldRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unused.UnusedPrivateMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unused.UnusedVariableRule.fixed</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.DuplicateCaseStatementRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyCatchBlockRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyElseBlockRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyFinallyBlockRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyForStatementRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyIfStatementRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyInstanceInitializerRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyStaticInitializerRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptySwitchStatementRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptySynchronizedStatementRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyTryBlockRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyWhileStatementRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EqualsAndHashCodeRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EqualsOverloadedRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.EmptyClassRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.imports.DuplicateImportRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.imports.ImportFromSamePackageRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.imports.ImportFromSunPackagesRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.naming.ClassNameSameAsFilenameRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unused.UnusedPrivateMethodParameterRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unused.UnusedMethodParameterRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.convention.ConfusingTernaryRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.convention.InvertedIfElseRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.convention.VectorIsObsoleteRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.convention.HashtableIsObsoleteRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.size.AbcMetricRule.fixed</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.naming.AbstractClassNameRule.fixed</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.AbstractClassWithPublicConstructorRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.AbstractClassWithoutAbstractMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.AddEmptyStringRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.AssertWithinFinallyBlockRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.AssignCollectionSortRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.AssignCollectionUniqueRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.BigDecimalInstantiationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.BitwiseOperatorInConditionalRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.BooleanGetBooleanRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.BooleanMethodReturnsNullRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.BracesForClassRule</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.BracesForForLoopRule</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.BracesForIfElseRule</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.BracesForMethodRule</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.BracesForTryCatchFinallyRule</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.BrokenNullCheckRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.BrokenOddnessCheckRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.BuilderMethodWithSideEffectsRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.BusyWaitRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.CatchArrayIndexOutOfBoundsExceptionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.CatchIllegalMonitorStateExceptionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.CatchIndexOutOfBoundsExceptionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.CatchThrowableRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.ChainedTestRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.ClassForNameRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.ClassJavadocRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.naming.ClassNameRule</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.size.ClassSizeRule</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.CloseWithoutCloseableRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ClosureAsLastMethodParameterRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.CollectAllIsDeprecatedRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.CompareToWithoutComparableRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.ComparisonOfTwoConstantsRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.ComparisonWithSelfRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.ConfusingClassNamedExceptionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.naming.ConfusingMethodNameRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ConfusingMultipleReturnsRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.ConstantAssertExpressionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.ConstantIfExpressionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.ConstantTernaryExpressionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.ConstantsOnlyInterfaceRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.convention.CouldBeElvisRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.CoupledTestCaseRule</key>
      <priority>INFO</priority>
    </rule>
    <!--<rule>-->
      <!--<repositoryKey>grvy</repositoryKey>-->
      <!--<key>org.codenarc.rule.size.CrapMetricRule</key>-->
      <!--<priority>INFO</priority>-->
      <!--<parameters></parameters>-->
    <!--</rule>-->
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.size.CyclomaticComplexityRule.fixed</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.DeadCodeRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.jdbc.DirectConnectionManagementRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.DoubleCheckedLockingRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.DoubleNegativeRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.dry.DuplicateListLiteralRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.DuplicateMapKeyRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.dry.DuplicateMapLiteralRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.dry.DuplicateNumberLiteralRule</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.DuplicateSetValueRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.dry.DuplicateStringLiteralRule</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.EmptyMethodInAbstractClassRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.serialization.EnumCustomSerializationIgnoredRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.ExceptionExtendsErrorRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.ExceptionNotThrownRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitCallToAndMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitCallToCompareToMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitCallToDivMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitCallToEqualsMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitCallToGetAtMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitCallToLeftShiftMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitCallToMinusMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitCallToModMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitCallToMultiplyMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitCallToOrMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitCallToPlusMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitCallToPowerMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitCallToRightShiftMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitCallToXorMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.ExplicitGarbageCollectionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitStackInstantiationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.naming.FactoryMethodNameRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.naming.FieldNameRule.fixed</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.security.FileCreateTempFileRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.FinalClassWithProtectedMemberRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.ForLoopShouldBeWhileLoopRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.braces.ForStatementBracesRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.GStringAsMapKeyRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.GStringExpressionWithinStringRule</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.GetterMethodCouldBePropertyRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.grails.GrailsDomainHasEqualsRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.grails.GrailsDomainHasToStringRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.grails.GrailsDomainWithServiceReferenceRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.grails.GrailsDuplicateConstraintRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.grails.GrailsDuplicateMappingRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.GroovyLangImmutableRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.HardCodedWindowsFileSeparatorRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.HardCodedWindowsRootDirectoryRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.braces.IfStatementBracesRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.convention.IfStatementCouldBeTernaryRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.generic.IllegalClassMemberRule.fixed</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.generic.IllegalClassReferenceRule.fixed</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.generic.IllegalPackageReferenceRule.fixed</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.generic.IllegalRegexRule.fixed</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.generic.IllegalStringRule.fixed</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.ImplementationAsTypeRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.InconsistentPropertyLockingRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.InconsistentPropertySynchronizationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.security.InsecureRandomRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.IntegerGetIntegerRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.naming.InterfaceNameRule.fixed</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.JUnitAssertAlwaysFailsRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.JUnitFailWithoutMessageRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.JUnitLostTestRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.JUnitPublicFieldRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.JUnitPublicNonTestMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.JUnitSetUpCallsSuperRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.JUnitStyleAssertionsRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.JUnitTearDownCallsSuperRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.JUnitTestMethodWithoutAssertRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.JUnitUnnecessarySetUpRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.JUnitUnnecessaryTearDownRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.security.JavaIoPackageAccessRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.jdbc.JdbcConnectionReferenceRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.jdbc.JdbcResultSetReferenceRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.jdbc.JdbcStatementReferenceRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.LineLengthRule</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.LocaleSetDefaultRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.logging.LoggerForDifferentClassRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.logging.LoggerWithWrongModifiersRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.logging.LoggingSwallowsStacktraceRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.convention.LongLiteralWithLowerCaseLRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.size.MethodCountRule</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.naming.MethodNameRule.fixed</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.size.MethodSizeRule.fixed</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.imports.MisorderedStaticImportsRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.MissingNewInThrowStatementRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.logging.MultipleLoggersRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.security.NonFinalPublicFieldRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.security.NonFinalSubclassOfSensitiveInterfaceRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.security.ObjectFinalizeRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.naming.PackageNameRule</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.naming.ParameterNameRule.fixed</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.convention.ParameterReassignmentRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.PrivateFieldCouldBeFinalRule.fixed</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.naming.PropertyNameRule.fixed</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.security.PublicFinalizeMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.PublicInstanceFieldRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.RandomDoubleCoercedToZeroRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.basic.RemoveAllOnSelfRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.generic.RequiredRegexRule.fixed</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.generic.RequiredStringRule.fixed</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.ReturnNullFromCatchBlockRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.serialization.SerialPersistentFieldsRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.serialization.SerialVersionUIDRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.SimpleDateFormatMissingLocaleRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.SpaceAfterCatchRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.SpaceAfterClosingBraceRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.SpaceAfterCommaRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.SpaceAfterForRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.SpaceAfterIfRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.SpaceAfterOpeningBraceRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.SpaceAfterSemicolonRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.SpaceAfterSwitchRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.SpaceAfterWhileRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.SpaceAroundClosureArrowRule</key>
      <priority>INFO</priority>
    </rule>
    <!--Failing ITs-->
    <!--<rule>-->
      <!--<repositoryKey>grvy</repositoryKey>-->
      <!--<key>org.codenarc.rule.formatting.SpaceAroundMapEntryColonRule</key>-->
      <!--<priority>INFO</priority>-->
    <!--</rule>-->
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.SpaceAroundOperatorRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.SpaceBeforeClosingBraceRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.formatting.SpaceBeforeOpeningBraceRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.SpockIgnoreRestUsedRule.fixed</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.generic.StatelessClassRule.fixed</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.design.StatelessSingletonRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.StaticCalendarFieldRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.StaticConnectionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.StaticDateFormatFieldRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.StaticMatcherFieldRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.exceptions.SwallowThreadDeathRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.SynchronizedOnBoxedPrimitiveRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.SynchronizedOnGetClassRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.SynchronizedOnReentrantLockRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.SynchronizedOnStringRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.SynchronizedOnThisRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.SynchronizedReadObjectMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.security.SystemExitRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.convention.TernaryCouldBeElvisRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.ThreadGroupRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.ThreadLocalNotStaticFinalRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryCallToSubstringRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryCatchBlockRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryCollectCallRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryCollectionCallRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryConstructorRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryDotClassRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryElseStatementRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.UnnecessaryFailRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryFinalOnPrivateMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationRule</key>
      <priority>INFO</priority>
    </rule>
    <!--Failing ITs-->
    <!-- this rule can write characters in codenarc report that cannot be parsed -->
    <!--<rule>-->
      <!--<repositoryKey>grvy</repositoryKey>-->
      <!--<key>org.codenarc.rule.unnecessary.UnnecessaryGStringRule</key>-->
      <!--<priority>INFO</priority>-->
    <!--</rule>-->
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryGetterRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryIfStatementRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryInstanceOfCheckRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryModOneRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryNullCheckRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryPublicModifierRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryReturnKeywordRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessarySemicolonRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessarySubstringRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unnecessary.UnnecessaryTransientModifierRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.security.UnsafeArrayDeclarationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unused.UnusedArrayRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.unused.UnusedObjectRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.UseCollectManyRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.groovyism.UseCollectNestedRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.UseOfNotifyMethodRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.naming.VariableNameRule.fixed</key>
      <priority>INFO</priority>
      <parameters></parameters>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.VolatileArrayFieldRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.concurrency.WaitOutsideOfWhileLoopRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.braces.WhileStatementBracesRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.convention.TrailingCommaRule</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>grvy</repositoryKey>
      <key>org.codenarc.rule.convention.NoTabCharacterRule</key>
      <priority>INFO</priority>
    </rule>
  </rules>
</profile>